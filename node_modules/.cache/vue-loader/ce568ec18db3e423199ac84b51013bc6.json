{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thanchatip/Documents/GitHub/my-vue-todo/myTodo.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/thanchatip/Documents/GitHub/my-vue-todo/myTodo.vue","mtime":1582019529703},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    @import url(\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\");\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 20px;\n}\n",{"version":3,"sources":["myTodo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"myTodo.vue","sourceRoot":".","sourcesContent":["<template>\n    <div id=\"app\" class=\"container\">\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a v-on:click=\"loadTodo()\" class=\"navbar-brand\" href=\"#\"><h4> MyTodo </h4></a>\n            <button class=\"navbar-toggler\" type=\"button\" \n                data-toggle=\"collapse\" data-target=\"#navbarNav\" \n                aria-controls=\"navbarNav\" aria-expanded=\"false\" \n                aria-label=\"Toggle navigation\">\n                <span class=\"navbar-toggler-icon\"></span>\n            </button>\n\n            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul class=\"navbar-nav\">\n                <li class=\"nav-item active\">\n                    <a v-on:click=\"loadTodo() , showCreate = false , showTodo = true\" class=\"nav-link\" href=\"#\"> Todo List <span class=\"sr-only\">(current)</span></a>\n                </li>\n                <li class=\"nav-item\">\n                    <a v-on:click=\"showTodo = false , showCreate = true, isEmpty = false\" class=\"nav-link\" href=\"#\"> Create <span class=\"sr-only\">(current)</span></a>\n                </li>\n                </ul>\n            </div>\n        </nav>\n\n        <!--create page-->\n        <div v-if=\"showCreate\" >\n            <div v-if=\"isEmpty\" class=\"alert alert-danger\" role=\"alert\">\n                Please Enter Todo !!!\n            </div>\n\n            <div class=\"form-group\">\n                <label for=\"todoTitle\"> Input todo </label><br>\n                <input v-model=\"newTask\" v-on:click=\"isEmpty = false\" type=\"text\" class=\"form-control\">\n                <label for=\"todoTitle\" class=\"form-text text-muted\"><small>* Required</small></label><br>\n            </div>\n            <div class=\"form-group\">    \n                <label for=\"todoTitle\"> Description </label><br>\n                <input v-model=\"newDescription\" type=\"text\" class=\"form-control\"><br>\n            </div>\n                <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"loadTodo(), showCreate = false , showTodo = true\"> Cancel </button>&nbsp;\n                <button type=\"button\" class=\"btn btn-primary\" v-if=\"isEmpty !== true\" v-on:click=\"saveTodo(), showCreate = false , showTodo = true\"> Save </button>\n                <button type=\"button\" class=\"btn btn-primary\" v-if=\"isEmpty\" v-on:click=\"showCreate = true , showTodo = false , isEmpty = true\"> Save </button>   \n        </div>\n        <br>\n        <!--home page-->\n        <div v-if=\"showTodo\">\n            <div  class=\"card mb-2\" v-for=\"(todo , index) in todos\" v-bind:key=\"todo.id\">\n                <div class=\"card-body\" > \n                    <h5 class=\"card-title\">{{ todo.task }}</h5>\n                    <p class=\"card-text\">{{ todo.description }}</p>\n                    <button v-on:click=\" todoRef = todo.id ,showCreate = true , showTodo = false , isEdit = true\" class=\"btn btn-primary\" > Edit </button>&nbsp;\n                    <button class=\"btn btn-danger\" v-on:click=\"removeTodo(todo.id)\"> Delete </button>&nbsp;\n                    <button v-if=\"index !== 0\" type=\"button\" class=\"btn btn-outline-info\" v-on:click=\"moveUp(index)\"> Up </button>&nbsp;\n                    <button v-if=\"index !== todos.length-1\" type=\"button\" class=\"btn btn-outline-info\" v-on:click=\"moveUp(index)\"> Down </button><br> \n            </div>\n        </div>\n    </div>\n</div>\n</template>\n\n<!--firebase config-->\n<script src=\"https://www.gstatic.com/firebasejs/7.7.0/firebase-app.js\"></script>\n<script src=\"https://www.gstatic.com/firebasejs/7.7.0/firebase-firestore.js\"></script>\n\n<script>\n    import { firebase } from \"@firebase/app\";\n    import \"@firebase/firestore\";\n  \n    var firebaseConfig = {\n        apiKey: \"AIzaSyDYs65_AIaAEI3-tpayM23T-1iMjILmPwI\",\n        authDomain: \"vue-todo-f0129.firebaseapp.com\",\n        databaseURL: \"https://vue-todo-f0129.firebaseio.com\",\n        projectId: \"vue-todo-f0129\",\n        storageBucket: \"vue-todo-f0129.appspot.com\",\n        messagingSenderId: \"480055401847\",\n        appId: \"1:480055401847:web:f9227fc0a48d381b7b1572\"\n    };\n\n    firebase.initializeApp(firebaseConfig);\n    const db = firebase.firestore(); \n\nexport default {\n    data() {\n            return {\n                todos:[],\n                newTask:'',\n                newDescription:'',\n                removeTask:'',\n                showTodo: true,\n                showCreate: false,\n                isEdit: false,\n                isEmpty:false,\n                docRef:''\n            }\n    },\n    mounted() {\n        this.loadTodo();\n    },\n    firestore() {\n            return {\n                todos:db.collection('todos'),\n            }\n    },\n    methods: {\n        saveTodo() {\n            let todo = [];\n                if(this.newTask && this.newDescription != false){\n                    db.collection('todos').add({\n                        task : this.newTask,\n                        description : this.newDescription,\n                    }).then(this.newTask = '',this.newDescription ='');\n                }\n                this.loadTodo(); \n            },\n            loadTodo() {\n                let todolist = [];\n                db.collection('todos').get().then(function(querySnapshot) {\n                    querySnapshot.forEach(function(doc) {\n                    let todo = {\n                        id: doc.id,\n                        task: doc.data().task,\n                        description: doc.data().description\n                    }\n                    todolist.push(todo)\n                    });\n                });\n                this.todos = todolist;\n            },\n            editTodo(collectionID){\n                db.collection('todos').doc(collectionID).update({ \n                    task: newTodo\n                    })\n                .then(() => {\n                    console.log('updated!')\n                });\n            },\n            removeTodo(collectionID) {\n                db.collection('todos').doc(collectionID).delete().then(function() {\n                    }).catch(function(error) {\n                        console.error(\"Error removing document: \", error);\n                        });  \n                this.loadTodo();        \n                    },\n            moveUp(index) {\n                if (index === 0) { return }\n                let todo = this.todos[index]\n                this.todos.splice(index, 1)\n                console.log(todo)\n                this.todos.splice(index-1, 0, todo)\n        },\n            moveDown(index) {\n                if (index == this.todos.length - 1) { return }\n                let todo = this.todos[index]\n                this.todos.splice(index, 1)\n                this.todos.splice(index+1, 0, todo)\n        }         \n        }\n        \n    }\n\n</script>\n<style>\n    @import url(\"https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css\");\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 20px;\n}\n</style>"]}]}