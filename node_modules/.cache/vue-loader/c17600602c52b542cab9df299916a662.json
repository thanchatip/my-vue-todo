{"remainingRequest":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thanchatip/Documents/GitHub/my-vue-todo/myTodo.vue?vue&type=template&id=19b7c3c0&","dependencies":[{"path":"/Users/thanchatip/Documents/GitHub/my-vue-todo/myTodo.vue","mtime":1582086912922},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container\", attrs: { id: \"app\" } }, [\n    _c(\n      \"nav\",\n      { staticClass: \"navbar navbar-expand-lg navbar-light bg-light\" },\n      [\n        _c(\n          \"a\",\n          {\n            staticClass: \"navbar-brand\",\n            attrs: { href: \"#\" },\n            on: {\n              click: function($event) {\n                _vm.loadTodo()\n              }\n            }\n          },\n          [_c(\"h4\", [_vm._v(\" MyTodo \")])]\n        ),\n        _vm._m(0),\n        _c(\n          \"div\",\n          {\n            staticClass: \"collapse navbar-collapse\",\n            attrs: { id: \"navbarNav\" }\n          },\n          [\n            _c(\"ul\", { staticClass: \"navbar-nav\" }, [\n              _c(\"li\", { staticClass: \"nav-item active\" }, [\n                _c(\n                  \"a\",\n                  {\n                    staticClass: \"nav-link\",\n                    attrs: { href: \"#\" },\n                    on: {\n                      click: function($event) {\n                        _vm.loadTodo(),\n                          (_vm.showCreate = false),\n                          (_vm.showTodo = true)\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\" Todo List \"),\n                    _c(\"span\", { staticClass: \"sr-only\" }, [\n                      _vm._v(\"(current)\")\n                    ])\n                  ]\n                )\n              ]),\n              _c(\"li\", { staticClass: \"nav-item\" }, [\n                _c(\n                  \"a\",\n                  {\n                    staticClass: \"nav-link\",\n                    attrs: { href: \"#\" },\n                    on: {\n                      click: function($event) {\n                        ;(_vm.showTodo = false),\n                          (_vm.showCreate = true),\n                          (_vm.isEmpty = false)\n                      }\n                    }\n                  },\n                  [\n                    _vm._v(\" Create \"),\n                    _c(\"span\", { staticClass: \"sr-only\" }, [\n                      _vm._v(\"(current)\")\n                    ])\n                  ]\n                )\n              ])\n            ])\n          ]\n        )\n      ]\n    ),\n    _vm.showCreate\n      ? _c(\"div\", [\n          _vm.emptySave\n            ? _c(\n                \"div\",\n                { staticClass: \"alert alert-danger\", attrs: { role: \"alert\" } },\n                [\n                  _vm._v(\n                    \"\\n                Please Enter Todo !!!\\n            \"\n                  )\n                ]\n              )\n            : _vm._e(),\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"label\", { attrs: { for: \"todoTitle\" } }, [\n              _vm._v(\" Input todo \")\n            ]),\n            _c(\"br\"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newTask,\n                  expression: \"newTask\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: { type: \"text\" },\n              domProps: { value: _vm.newTask },\n              on: {\n                click: function($event) {\n                  ;(_vm.isEmpty = true), _vm.em\n                },\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.newTask = $event.target.value\n                }\n              }\n            }),\n            _vm._m(1),\n            _c(\"br\")\n          ]),\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"label\", { attrs: { for: \"todoTitle\" } }, [\n              _vm._v(\" Description \")\n            ]),\n            _c(\"br\"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newDescription,\n                  expression: \"newDescription\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: { type: \"text\" },\n              domProps: { value: _vm.newDescription },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.newDescription = $event.target.value\n                }\n              }\n            }),\n            _c(\"br\")\n          ]),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-primary\",\n              attrs: { type: \"button\" },\n              on: {\n                click: function($event) {\n                  _vm.loadTodo(),\n                    (_vm.showCreate = false),\n                    (_vm.showTodo = true)\n                }\n              }\n            },\n            [_vm._v(\" Cancel \")]\n          ),\n          _vm._v(\"Â \\n                \"),\n          !_vm.isEmpty\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-primary\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      ;(_vm.showCreate = true),\n                        (_vm.showTodo = false),\n                        (_vm.emptySave = true)\n                    }\n                  }\n                },\n                [_vm._v(\" Save \")]\n              )\n            : _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-primary\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      _vm.saveTodo(),\n                        (_vm.showCreate = false),\n                        (_vm.showTodo = true)\n                    }\n                  }\n                },\n                [_vm._v(\" Save \")]\n              )\n        ])\n      : _vm._e(),\n    _vm.showEdit\n      ? _c(\"div\", [\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"label\", { attrs: { for: \"todoTitle\" } }, [\n              _vm._v(\" Input todo \")\n            ]),\n            _c(\"br\"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.taskEditText,\n                  expression: \"taskEditText\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: { type: \"text\" },\n              domProps: { value: _vm.taskEditText },\n              on: {\n                click: function($event) {\n                  _vm.isEmpty = false\n                },\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.taskEditText = $event.target.value\n                }\n              }\n            }),\n            _vm._m(2),\n            _c(\"br\")\n          ]),\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\"label\", { attrs: { for: \"todoTitle\" } }, [\n              _vm._v(\" Description \")\n            ]),\n            _c(\"br\"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.descriptionEditText,\n                  expression: \"descriptionEditText\"\n                }\n              ],\n              staticClass: \"form-control\",\n              attrs: { type: \"text\" },\n              domProps: { value: _vm.descriptionEditText },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.descriptionEditText = $event.target.value\n                }\n              }\n            }),\n            _c(\"br\")\n          ]),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-primary\",\n              attrs: { type: \"button\" },\n              on: {\n                click: function($event) {\n                  _vm.loadTodo(),\n                    (_vm.showCreate = false),\n                    (_vm.showTodo = true)\n                }\n              }\n            },\n            [_vm._v(\" Cancel \")]\n          ),\n          _vm._v(\"Â \\n                \"),\n          _vm.isEmpty !== true\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-primary\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function($event) {\n                      _vm.updateTodoText(),\n                        (_vm.showEdit = false),\n                        (_vm.showTodo = true)\n                    }\n                  }\n                },\n                [_vm._v(\" Save \")]\n              )\n            : _vm._e()\n        ])\n      : _vm._e(),\n    _vm.showTodo\n      ? _c(\n          \"div\",\n          _vm._l(_vm.todos, function(todo, index) {\n            return _c(\"div\", { key: todo.id, staticClass: \"card mb-2\" }, [\n              _c(\"div\", { staticClass: \"card-body\" }, [\n                _c(\"h5\", { staticClass: \"card-title\" }, [\n                  _vm._v(_vm._s(todo.task))\n                ]),\n                _c(\"p\", { staticClass: \"card-text\" }, [\n                  _vm._v(_vm._s(todo.description))\n                ]),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-primary\",\n                    on: {\n                      click: function($event) {\n                        _vm.editTodo(todo),\n                          (_vm.showTodo = false),\n                          (_vm.showEdit = true)\n                      }\n                    }\n                  },\n                  [_vm._v(\" Edit \")]\n                ),\n                _vm._v(\"Â \\n                    \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger\",\n                    on: {\n                      click: function($event) {\n                        _vm.removeTodo(todo.id)\n                      }\n                    }\n                  },\n                  [_vm._v(\" Delete \")]\n                ),\n                _vm._v(\"Â \\n                    \"),\n                index !== 0\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-outline-info\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function($event) {\n                            _vm.moveUp(index)\n                          }\n                        }\n                      },\n                      [_vm._v(\" Up \")]\n                    )\n                  : _vm._e(),\n                _vm._v(\"Â \\n                    \"),\n                index !== _vm.todos.length - 1\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-outline-info\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function($event) {\n                            _vm.moveDown(index)\n                          }\n                        }\n                      },\n                      [_vm._v(\" Down \")]\n                    )\n                  : _vm._e(),\n                _c(\"br\")\n              ])\n            ])\n          }),\n          0\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"button\",\n      {\n        staticClass: \"navbar-toggler\",\n        attrs: {\n          type: \"button\",\n          \"data-toggle\": \"collapse\",\n          \"data-target\": \"#navbarNav\",\n          \"aria-controls\": \"navbarNav\",\n          \"aria-expanded\": \"false\",\n          \"aria-label\": \"Toggle navigation\"\n        }\n      },\n      [_c(\"span\", { staticClass: \"navbar-toggler-icon\" })]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      { staticClass: \"form-text text-muted\", attrs: { for: \"todoTitle\" } },\n      [_c(\"small\", [_vm._v(\"* Required\")])]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      { staticClass: \"form-text text-muted\", attrs: { for: \"todoTitle\" } },\n      [_c(\"small\", [_vm._v(\"* Required\")])]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}